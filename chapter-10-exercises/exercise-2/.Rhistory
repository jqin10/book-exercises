employees <- c(paste(Employee, 1:100))
employees <- c(paste("Employee", 1:100))
?runif
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries_2017 <- c(runif(100, 40000, 50000))
print(salaries_2017)
adjustments_2017 <- runif(100, -5000, 10000)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries <- data.frame( employees, salries_2017, adjustments_2017)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries <- data.frame( employees, salaries_2017, adjustments_2017)
print(salaries)
colnames(salaries) <- c([adjustments_2017>0])
colnames(salaries) <- c(adjustments_2017[adjustments_2017>0])
colnames(salaries) <- c(adjustments_2017[adjustments_2017>0 ==TRUE])
colnames(salaries) <- c([adjustments_2017[adjustments_2017>0 ==TRUE])
colnames(salaries) <- c([[adjustments_2017[adjustments_2017>0 ==TRUE]])
colnames(salaries) <- c([[adjustments_2017[adjustments_2017>0]])
print(salaries)
# What was the 2018 salary of Employee 57
salaries[57, 2+3]
# What was the 2018 salary of Employee 57
salaries[57, 2]
# What was the 2018 salary of Employee 57
salaries[57, 2 3]
salaries$salaries_2018 <- salries$salries_2017 + salries$adjustments
salaries$salaries_2018 <- salries$salaries_2017 + salries$adjustments
salaries$salaries_2018 <- salries$salaries_2017 + salaries$adjustments
salaries$salaries_2018 <- salaries$salaries_2017 + salaries$adjustments_2017
View(salaries_2018)
View(salaries)
salries$got raise <- salries$adjustments > 0
salries$got_raise <- salries$adjustments > 0
salaries$got_raise <- salries$adjustments > 0
salaries$got_raise <- salaries$adjustments > 0
# What was the 2018 salary of Employee 57
salaries[salaries$employees== "Employee 57" , "salaries_2018"]
salaries$got_raise <- salaries$adjustments > 0
print(got_raise)
salaries$got_raise <- [salaries$adjustments > 0]
# How many employees got a raise?
nrow(salaries[salaries$got_raise == TRUE, ])
salaries$got_raise <- salaries$adjustments > 0
View(salaries)
# What was the dollar value of the highest raise?
salaries [ salaries$adjustments_2017== max()]
biggest_raise <- max(salaries$adjustments_2017)
# What was the dollar value of the highest raise?
salaries [ salaries$adjustments_2017== max(biggest_raise)]
salaries [ salaries$adjustments_2017== max(biggest_raise)]
salaries [ salaries$adjustments_2017== max(biggest_raise), ]
salaries [ salaries$adjustments_2017== max(biggest_raise),"adjustments_2017" ]
# What was the largest decrease in salaries between the two years?
largest_decrease <- min(salaries$adjustments_2017)
salaries [salaries$adjustments_2017 == min(largest_decrease), "adjustment_2017"]
salaries [salaries$adjustments_2017 == min(largest_decrease), "adjustments_2017"]
salaries <- data.frame( employees, salaries_2017, adjustments_2017, stringsAsFactors = FALSE)
# What was the "name" of the employee who received the highest raise?
salaries [ salaries$adjustments_2017 == (max(salaries$employees))]
# What was the "name" of the employee who received the highest raise?
salaries [ salaries$adjustments_2017 == (max(salaries$employees)), "employees"]
# What was the "name" of the employee who received the highest raise?
salaries [ salaries$adjustments_2017 == (max(salaries$biggest_raise)), "employees"]
# What was the "name" of the employee who received the highest raise?
salaries [ salaries$adjustments_2017 == max(biggest_raise), "employees"]
# What was the name of the employee who recieved largest decrease in salary?
salaries[ salaries$adjustments_2017==min(largest_decrease), "employees"]
# For people who did not get a raise, how much money did they lose on average?
paycut <- salaries[ salaries$got_raise ==FALSE, ]
mean(paycut$adhystments)
mean(paycut$adjustments_2017)
paycut <- salaries[ salaries$got_raise ==FALSE, ]
mean(paycut$adjustments_2017)
# For people who did not get a raise, how much money did they lose on average?
paycut <- salaries[ salaries$got_raise == FALSE, "adjustments_2017 ]
mean(paycut$adjustments_2017)
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
paycut <- salaries[ salaries$got_raise == FALSE, "adjustments_2017 ]
# For people who did not get a raise, how much money did they lose on average?
paycut <- salaries[salaries$got_raise == FALSE, "adjustments_2017" ]
mean(paycut$adjustments_2017)
# What was the average salary change?
mean(adjustments_2017)
salaries <- data.frame( employees, salaries_2017, adjustments_2017, stringsAsFactors = FALSE)
print(salaries)
# For people who did not get a raise, how much money did they lose on average?
paycut <- salaries[salaries$got_raise == FALSE, "adjustments_2017" ]
mean(paycut$adjustments_2017)
# Exercise 2: working with data frames
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- c(paste("Employee", 1:100))
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries_2017 <- c(runif(100, 40000, 50000))
# Create a vector of 100 annual salary adjustments between -5000 and 10000.
# (A negative number represents a salary decrease due to corporate greed)
# Again use the `runif()` function to pick 100 random numbers in that range.
adjustments_2017 <- runif(100, -5000, 10000)
# Create a data frame `salaries` by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame( employees, salaries_2017, adjustments_2017, stringsAsFactors = FALSE)
print(salaries)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salaries_2018 <- salaries$salaries_2017 + salaries$adjustments_2017
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$got_raise <- salaries$adjustments > 0
View(salaries)
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2018 salary of Employee 57
salaries[salaries$employees== "Employee 57" , "salaries_2018"]
# How many employees got a raise?
nrow(salaries[salaries$got_raise == TRUE, ])
# What was the dollar value of the highest raise?
biggest_raise <- max(salaries$adjustments_2017)
salaries [ salaries$adjustments_2017== max(biggest_raise),"adjustments_2017" ]
# What was the "name" of the employee who received the highest raise?
salaries [ salaries$adjustments_2017 == max(biggest_raise), "employees"]
# What was the largest decrease in salaries between the two years?
largest_decrease <- min(salaries$adjustments_2017)
salaries [salaries$adjustments_2017 == min(largest_decrease), "adjustments_2017"]
# What was the name of the employee who recieved largest decrease in salary?
salaries[ salaries$adjustments_2017==min(largest_decrease), "employees"]
# What was the average salary change?
mean(adjustments_2017)
# For people who did not get a raise, how much money did they lose on average?
paycut <- salaries[salaries$got_raise == FALSE, "adjustments_2017" ]
mean(paycut)
getwd()
setwd("~/Desktop/book-exercises/chapter-10-exercises/exercise-2")
# Write a .csv file of your salary data to your working directory
salaries_csv <- read.csv("salaries", stringsAsFactors = FALSE)
salaries_csv
# Write a .csv file of your salary data to your working directory
salaries_csv <- read.csv("salaries", stringsAsFactors = FALSE)
# Write a .csv file of your salary data to your working directory
salaries_csv <- read.csv("salaries.csv", stringsAsFactors = FALSE)
salaries_csv
getwd()
getwd()
View(salaries)
# What was the average salary change?
mean(adjustments_2017)
